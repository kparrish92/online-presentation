library(xaringanthemer)
style_mono_accent(
base_color = "#1c5253",
header_font_google = google_font("Josefin Sans"),
text_font_google   = google_font("Montserrat", "300", "300i"),
code_font_google   = google_font("Fira Mono")
)
library(xaringanthemer)
style_mono_accent(
base_color = "#1c5253",
header_font_google = google_font("Josefin Sans"),
text_font_google   = google_font("Montserrat", "300", "300i"),
code_font_google   = google_font("Fira Mono")
)
style_duo(primary_color = "#1F4257", secondary_color = "#F97B64")
library(xaringanthemer)
style_mono_accent(
base_color = "#1c5253",
header_font_google = google_font("Josefin Sans"),
text_font_google   = google_font("Montserrat", "300", "300i"),
code_font_google   = google_font("Fira Mono")
)
style_duo(primary_color = "#1F4257", secondary_color = "#F97B64")
knitr::include_graphics("assets/img/table2.html")
knitr::include_graphics("assets/img/table2.html")
knitr::include_graphics("assets/img/table2.png")
knitr::include_graphics("assets/img/table2.png")
knitr::include_graphics("assets/img/table1.png")
knitr::include_graphics("assets/img/table6.png")
knitr::include_graphics("assets/img/table5.png")
knitr::include_graphics("assets/img/table7.png")
knitr::include_graphics("assets/img/table6.png")
knitr::include_graphics("assets/img/table10.png")
knitr::include_graphics("assets/img/table12.png")
knitr::include_graphics("assets/img/table10.png")
?wilcox.test
?pivot_wider
?pivot_wider
?mutate
??mutate
?wilcox.test
wilcox.test(rnorm(10), rnorm(10, 2), conf.int = TRUE)
?tibble
fake_data = tibble(accuracy = 10:15)
library(tibble)
library(tibble)
fake_data = tibble(accuracy = 10:15)
View(fake_data)
?rnorm
fake_data = tibble(accuracy = rnorm(263,.52,.49))
View(fake_data)
fake_data = tibble(accuracy = rnorm(263,.52,.49), time = (T1, T2), language = (english, german), feature = (rhotic, obstruent))
?tibble
fake_data = tibble(accuracy = rnorm(263,.52,.49), time = (T1, T2))
fake_data = tibble(accuracy = rnorm(263,.52,.49) time = (T1, T2))
fake_data = tibble(accuracy = rnorm(263,.52,.49, time = (T1, T2)
fake_data = tibble(accuracy = rnorm(263,.52,.49, time = ("T1", "T2"
fake_data = tibble(accuracy = rnorm(263,.52,.49), time = ("T1", "T2"))
fake_data = tibble(accuracy = rnorm(263,.52,.49)
fake_data = tibble(accuracy = rnorm(263,.52,.49) %>%
mutate(time = ("T1"))
library(dplyr)
knitr::include_graphics("assets/img/table10.png")
knitr::include_graphics("assets/img/table9.png")
knitr::include_graphics("assets/img/table11.png")
knitr::include_graphics("assets/img/table15.png")
fake_data = tibble(accuracy = rnorm(263,.52,.49, languageg = "l2")
fake_data = tibble(accuracy = rnorm(263,.52,.49, languageg = "l2")
fake_data = tibble(accuracy = rnorm(263,.52,.49) %>%
mutate(time = ("T1"))
fake_data = tibble(accuracy = rnorm(263,.52,.49) %>%
fake_data = tibble(accuracy = rnorm(263,.52,.49) %>%
mutate(time = ("T1"))
fake_data = tibble(accuracy = rnorm(263,.52,.49)
fake_data = tibble(accuracy = rnorm(263,.52,.49) %>%
fake_data = tibble(accuracy = rnorm(263,.52,.49)
fake_data$time = "t1"
fake_data$time = "t1"
View(fake_data)
knitr::include_graphics("assets/img/table15.png")
1_og = tibble(accuracy = rnorm(263,.52,.49)
german_stop_t1 = tibble(accuracy = rnorm(166,.4,.49) %>%
mutate(time = "t1")
german_stop_t1 = tibble(accuracy = rnorm(166,.4,.49) %>%
german_stop_t1 = tibble(accuracy = rnorm(166,.4,.49)
tibble(accuracy = rnorm(166,.4,.49)
tibble(accuracy = rnorm(166,.4,.49)
tibble(accuracy = rnorm(166,.4,.49))
tibble(rnorm(166,.4,.49)
z = tibble(rnorm(166,.4,.49)
library(tibble)
tibble(accuracy = rnorm(166,.4,.49)
x = tibble(accuracy = rnorm(166,.4,.49)
x = tibble(accuracy = rnorm(166,.4,.49))
g_o_t1 = tibble(accuracy = rnorm(166,.4,.49)) %>%
mutate(time = "t1")
g_o_t1 = tibble(accuracy = rnorm(166,.4,.49)) %>%
mutate(time = "t1", feature = "obstruent", language = "german")
View(g_o_t1)
g_r_t1 = tibble(accuracy = rnorm(97,.73,.41)) %>%
mutate(time = "t1", feature = "rhotic", language = "german")
g_o_t1 = tibble(accuracy = rnorm(166,.4,.49)) %>%
mutate(time = "t1", feature = "obstruent", language = "german")
g_r_t1 = tibble(accuracy = rnorm(97,.73,.41)) %>%
mutate(time = "t1", feature = "rhotic", language = "german")
g_o_t2 = tibble(accuracy = rnorm(159,.44,.50)) %>%
mutate(time = "t2", feature = "obstruent", language = "german")
g_r_t2 = tibble(accuracy = rnorm(94,.4,.46)) %>%
mutate(time = "t2", feature = "rhotic", language = "german")
all_german = rbind(g_o_t1, g_o_t2, g_r_t1, g_r_t2)
knitr::include_graphics("assets/img/table11.png")
e_o_t1 = tibble(accuracy = rnorm(162,.5,.52)) %>%
mutate(time = "t1", feature = "obstruent", language = "english")
e_r_t1 = tibble(accuracy = rnorm(99,.91,.29)) %>%
mutate(time = "t1", feature = "rhotic", language = "english")
e_o_t2 = tibble(accuracy = rnorm(162,.5,.52)) %>%
mutate(time = "t2", feature = "obstruent", language = "english")
e_r_t2 = tibble(accuracy = rnorm(99,.91,.29)) %>%
mutate(time = "t2", feature = "rhotic", language = "english")
fake_data = rbind(g_o_t1, g_o_t2, g_r_t1, g_r_t2, e_o_t1, e_o_t2, e_r_t1, e_r_t2)
g_o_t1 = tibble(accuracy = rnorm(166,.4,.49)) %>%
mutate(time = "t1", feature = "obstruent", language = "german")
g_r_t1 = tibble(accuracy = rnorm(97,.73,.41)) %>%
mutate(time = "t1", feature = "rhotic", language = "german")
g_o_t2 = tibble(accuracy = rnorm(159,.44,.50)) %>%
mutate(time = "t2", feature = "obstruent", language = "german")
g_r_t2 = tibble(accuracy = rnorm(94,.4,.46)) %>%
mutate(time = "t2", feature = "rhotic", language = "german")
e_o_t1 = tibble(accuracy = rnorm(162,.5,.52)) %>%
mutate(time = "t1", feature = "obstruent", language = "english")
e_r_t1 = tibble(accuracy = rnorm(99,.91,.29)) %>%
mutate(time = "t1", feature = "rhotic", language = "english")
e_o_t2 = tibble(accuracy = rnorm(162,.5,.52)) %>%
mutate(time = "t2", feature = "obstruent", language = "english")
e_r_t2 = tibble(accuracy = rnorm(99,.91,.29)) %>%
mutate(time = "t2", feature = "rhotic", language = "english")
fake_data = rbind(g_o_t1, g_o_t2, g_r_t1, g_r_t2, e_o_t1, e_o_t2, e_r_t1, e_r_t2)
ggplot(aes = (y = accuracy, x = language)) + geom_boxplot()
ggplot(aes = (y = accuracy, x = language)) + geom_boxplot()
ggplot(aes = (y = accuracy, x = language))
ggplot(aes(y = accuracy, x = langauge))
library(ggplot2)
ggplot(aes(y = accuracy, x = langauge))
fake_data %>%
ggplot(aes(y = accuracy, x = langauge))
fake_data %>%
ggplot(aes(y = accuracy, x = langauge)) + geom_boxplot()
View(fake_data)
fake_data %>%
ggplot(aes(y = accuracy, x = language)) + geom_boxplot()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature)) + geom_boxplot()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, shape = time)) + geom_boxplot()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, fill = time)) + geom_boxplot()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, fill = time)) + geom_point()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, shape = time)) + geom_point()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, shape = time)) + geom_boxplot()
ggplot(aes(y = accuracy, x = language, color = feature, fill = time)) + geom_boxplot()
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, fill = time)) + geom_boxplot()
fake_data %>%
filter(feature == "rhotic")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot,(aes(y = accuracy, x = language, color = time)) + geom_boxplot()
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot()
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3, color = "seagreen")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .3)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .01)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .12)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2")
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .12, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .12, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim = 1.0
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
(ylim = 1.0)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim=c(0,1)
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2") + ylim=c(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") + ggtitle("Hypothetical graph of rhotic variation at T1 and T2") + ylim=c(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim = c(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim = c(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "obstruent") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of obstruent devoicing variation at T1 and T2") +
ylim(0,1)
knitr::include_graphics("assets/img/figure1")
knitr::include_graphics("assets/img/figure1.png")
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
knitr::include_graphics("assets/img/figure1.png")
knitr::include_graphics("assets/img/figure9.png")
knitr::include_graphics("assets/img/figure9.png")
knitr::include_graphics("assets/img/table3.png")
knitr::include_graphics("assets/img/table3.png")
knitr::include_graphics("assets/img/table5.png")
knitr::include_graphics("assets/img/table7.png")
knitr::include_graphics("assets/img/table4.png")
knitr::include_graphics("assets/img/table6.png")
knitr::include_graphics("assets/img/table8.png")
library(dplyr)
library(tibble)
library(ggplot2)
source(here::here("fake_data_script.R"))
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
View(fake_data)
fake_data %>%
filter(feature == "obstruent") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot() +
ggtitle("Hypothetical graph of obstruent devoicing variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot() +
ggtitle("Hypothetical graph of obstruent devoicing variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot() +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "obstruent") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot() +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
library(tibble)
library(dplyr)
g_o_t1 = tibble(accuracy = rnorm(166,.4,.49)) %>%
mutate(time = "t1", feature = "obstruent", language = "german")
g_r_t1 = tibble(accuracy = rnorm(97,.73,.41)) %>%
mutate(time = "t1", feature = "rhotic", language = "german")
g_o_t2 = tibble(accuracy = rnorm(159,.44,.50)) %>%
mutate(time = "t2", feature = "obstruent", language = "german")
g_r_t2 = tibble(accuracy = rnorm(94,.4,.46)) %>%
mutate(time = "t2", feature = "rhotic", language = "german")
e_o_t1 = tibble(accuracy = rnorm(162,.5,.52)) %>%
mutate(time = "t1", feature = "obstruent", language = "english")
e_r_t1 = tibble(accuracy = rnorm(99,.91,.29)) %>%
mutate(time = "t1", feature = "rhotic", language = "english")
e_o_t2 = tibble(accuracy = rnorm(162,.5,.52)) %>%
mutate(time = "t2", feature = "obstruent", language = "english")
e_r_t2 = tibble(accuracy = rnorm(99,.91,.29)) %>%
mutate(time = "t2", feature = "rhotic", language = "english")
fake_data = rbind(g_o_t1, g_o_t2, g_r_t1, g_r_t2, e_o_t1, e_o_t2, e_r_t1, e_r_t2)
library(ggplot2)
fake_data %>%
ggplot(aes(y = accuracy, x = language, color = feature, fill = time)) + geom_boxplot()
# show rhotics only
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot()
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
# obstruent devoicing
fake_data %>%
filter(feature == "obstruent") %>%
ggplot(aes(y = accuracy, x = language, color = time)) +
stat_summary(fun.data = "mean_cl_boot") + geom_point(alpha = .02, color = "black") +
ggtitle("Hypothetical graph of obstruent devoicing variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "obstruent") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot() +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
fake_data %>%
filter(feature == "rhotic") %>%
ggplot(aes(y = accuracy, x = language, color = time)) + geom_boxplot() +
ggtitle("Hypothetical graph of rhotic variation at T1 and T2") +
ylim(0,1)
library(dplyr)
library(tibble)
library(ggplot2)
source(here::here("fake_data_script.R"))
source(here::here("scripts", "fake_data_script.R"))
